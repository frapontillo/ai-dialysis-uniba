/**
 *       Dialysis Data Mart for Artificial Intelligence
 *       ----------------------------------------------
 * 
 *  Step 1: database creation
 *  Step 2: symptom and race import
 *  Step 3: patient, dialysis and symptom outcomes join import
 * 
 */

/* Step 1: database creation */
IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'DialysisAI')
DROP DATABASE [DialysisAI]
GO
IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = N'DialysisAI')
BEGIN
CREATE DATABASE [DialysisAI]
END

GO

/* Step 2: symptom and race import */
/* Race */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RACE]') AND type in (N'U'))
DROP TABLE [dbo].[RACE]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RACE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RACE](
	[ID] [int] NOT NULL,
	[DESCRIPTION] [varchar](50) NULL,
 CONSTRAINT [PK_RACE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
INSERT INTO [dbo].[RACE]
SELECT ID, DESCRIZIONE FROM [SourceDB].[dbo].[TB_RAZZE]
GO
/* Symptom */
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SYMPTOM]') AND type in (N'U'))
DROP TABLE [dbo].[SYMPTOM]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SYMPTOM]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[SYMPTOM](
	[ID] [int] NOT NULL,
	[DESCRIPTION] [varchar](70) NULL,
 CONSTRAINT [PK_SYMPTOM] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
INSERT INTO [dbo].[SYMPTOM] ([ID] ,[DESCRIPTION])
SELECT ID, DESCRIZIONE FROM [SourceDB].[dbo].TB_SINTOMI

/* Step 3: patient, dialysis and symptom outcomes join import */

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PATIENT_DIALYSIS_SYMPTOM]') AND type in (N'U'))
DROP TABLE [dbo].[PATIENT_DIALYSIS_SYMPTOM]
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PATIENT_DIALYSIS_SYMPTOM]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PATIENT_DIALYSIS_SYMPTOM](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[PATIENT] [bigint] NULL,
	[CENTER] [bigint] NULL,
	[PATIENT_SEX] [bigint] NULL,
	[PATIENT_RACE] [bigint] NULL,
	[PATIENT_AGE] [bigint] NULL,
	[SESSION_ID] [bigint] NULL,
	[SESSION_DATE] [datetime] NULL,
	[KTV] [float] NULL,
	[QB] [float] NULL,
	[PROG_WEIGHT_LOSS] [float] NULL,
	[REAL_WEIGHT_LOSS] [float] NULL,
	[DELTA_WEIGHT] [float] NULL,
	[PROG_DURATION] [float] NULL,
	[REAL_DURATION] [float] NULL,
	[DELTA_DURATION] [float] NULL,
	[SAP_START] [float] NULL,
	[SAP_END] [float] NULL,
	[AVG_SAP] [float] NULL,
	[DAP_START] [float] NULL,
	[DAP_END] [float] NULL,
	[AVG_DAP] [float] NULL,
	[BLOOD_VOLUME] [float] NULL,
	[DELTA_BLOOD_FLOW] [float] NULL,
	[DELTA_UF] [float] NULL,
	[SYMPTOM_ID] [bigint] NULL,
 CONSTRAINT [PK_PATIENT_DIALYSIS_SYMPTOM] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END;

WITH
	[DIALYSIS_W_NEXT] AS (
		SELECT
			-- record data
			S1.ID,
			S1.DATA_SEDUTA AS [SESSION_DATE],
			S1.ID_CENTRO_PZ_ANAGRAFICA AS [CENTER],
			S1.ID_PAZIENTE_PZ_ANAGRAFICA AS [PATIENT],

			-- dialysis data:
			-- [KTV], [QB], [PROG_WEIGHT_LOSS], [REAL_WEIGHT_LOSS], [DELTA_WEIGHT], [PROG_DURATION], [REAL_DURATION], [DELTA_DURATION],
			-- [SAP_START], [SAP_END], [AVG_SAP], [DAP_START], [DAP_END], [AVG_DAP], [BLOOD_VOLUME], [DELTA_BLOOD_FLOW], [DELTA_UF]
			S1.[KTV],
			S1.[TOTALE_QB] AS [QB],
			(S1.PESO_INIZIO - S1.PESO_IDEALE_FINE) AS [PROG_WEIGHT_LOSS],
			(S1.PESO_INIZIO - S1.PESO_FINE) AS [REAL_WEIGHT_LOSS],
			IIF((S1.PESO_INIZIO = S1.PESO_IDEALE_FINE), 0, (ABS((S1.PESO_INIZIO - S1.PESO_FINE)-(S1.PESO_INIZIO - S1.PESO_IDEALE_FINE))/(S1.PESO_INIZIO - S1.PESO_IDEALE_FINE))) AS [DELTA_WEIGHT],
			DATEDIFF(MINUTE, '1899-12-30 00:00:00', S1.[DURATA_TRATTAMENTO_TEO]) AS [PROG_DURATION],
			DATEDIFF(MINUTE, '1899-12-30 00:00:00', S1.[DURATA_TRATTAMENTO]) AS [REAL_DURATION],
			DATEDIFF(MINUTE, S1.DURATA_TRATTAMENTO_TEO, S1.DURATA_TRATTAMENTO) AS [DELTA_DURATION],
			S1.[PA_SIS_INIZIO] AS [SAP_START],
			S1.[PA_SIS_FINE] AS [SAP_END],
			(S1.[PA_SIS_INIZIO] + S1.[PA_SIS_FINE]) AS [AVG_SAP],
			S1.[PA_DIA_INIZIO] AS [DAP_START],
			S1.[PA_DIA_FINE] AS [DAP_END],
			(S1.[PA_DIA_INIZIO] + S1.[PA_DIA_FINE]) AS [AVG_DAP],
			S1.[VOLUME_EMATICO_FINE] AS [BLOOD_VOLUME],
			(S1.[FLUSSO_SANGUE_TEO] - S1.[FLUSSO_SANGUE]) AS [DELTA_BLOOD_FLOW],
			(S1.[ULTRAFILTRAZIONE_MEDIA_TEO] - S1.[ULTRAFILTRAZIONE_MEDIA]) AS [DELTA_UF],
			-- end of dialysis data

			-- next dialysis data
			S2.ID AS [NEXT_SESSION_ID],
			S2.DATA_SEDUTA AS [NEXT_SESSION_DATE]
		FROM
			[SourceDB].[dbo].[PZ_SEDUTE_EMODIALISI] AS S1
		INNER JOIN (
			SELECT ID, DATA_SEDUTA, ID_PAZIENTE_PZ_ANAGRAFICA, ID_CENTRO_PZ_ANAGRAFICA
			FROM [SourceDB].[dbo].[PZ_SEDUTE_EMODIALISI]) AS S2
		ON (
			S1.ID_PAZIENTE_PZ_ANAGRAFICA = S2.ID_PAZIENTE_PZ_ANAGRAFICA
			AND S1.ID_CENTRO_PZ_ANAGRAFICA = S2.ID_CENTRO_PZ_ANAGRAFICA
			AND S2.DATA_SEDUTA > S1.DATA_SEDUTA
		)
	),

	[DIALYSIS_MIN_NEXT_DATE] AS (
		SELECT
			[ID],
			[SESSION_DATE],
			[CENTER],
			[PATIENT],
			MIN([NEXT_SESSION_DATE]) AS [NEXT_SESSION_DATE]
		FROM [DIALYSIS_W_NEXT]
		GROUP BY [ID], [SESSION_DATE], [CENTER], [PATIENT]
	),

	[DIALYSIS] AS (
		SELECT
			[DIALYSIS_W_NEXT].*
		FROM [DIALYSIS_MIN_NEXT_DATE]
			INNER JOIN [DIALYSIS_W_NEXT]
		ON ([DIALYSIS_MIN_NEXT_DATE].ID = [DIALYSIS_W_NEXT].ID
			AND [DIALYSIS_MIN_NEXT_DATE].[NEXT_SESSION_DATE] = [DIALYSIS_W_NEXT].[NEXT_SESSION_DATE])
	),

	[PATIENT_DIALYSIS] AS (
		SELECT
			-- the relevant patient information
			DATEDIFF(day, [SourceDB].[dbo].[GN_ANAGRAFICA].DATA_NASCITA, [DIALYSIS].[SESSION_DATE]) AS [PATIENT_AGE],
			[SourceDB].[dbo].[GN_ANAGRAFICA].SESSO AS [PATIENT_SEX],
			[SourceDB].[dbo].[GN_ANAGRAFICA].ID_TB_RAZZA AS [PATIENT_RACE],
			-- all the dialysis information
			[DIALYSIS].*
		FROM [DIALYSIS]
		INNER JOIN [SourceDB].[dbo].[GN_ANAGRAFICA]
		ON [DIALYSIS].PATIENT = [SourceDB].[dbo].[GN_ANAGRAFICA].ID
		AND [DIALYSIS].CENTER = [SourceDB].[dbo].[GN_ANAGRAFICA].ID_TB_CENTRO
	),

	[PATIENT_DIALYSIS_SYMPTOM] AS (
		SELECT
			-- all the information thus far
			[PATIENT_DIALYSIS].[PATIENT],
			[PATIENT_DIALYSIS].[CENTER],

			[PATIENT_DIALYSIS].[PATIENT_SEX],
			[PATIENT_DIALYSIS].[PATIENT_RACE],
			[PATIENT_DIALYSIS].[PATIENT_AGE],
			
			[PATIENT_DIALYSIS].[ID] AS [SESSION_ID],
			[PATIENT_DIALYSIS].[SESSION_DATE],

			[KTV], [QB], [PROG_WEIGHT_LOSS], [REAL_WEIGHT_LOSS], [DELTA_WEIGHT], [PROG_DURATION], [REAL_DURATION], [DELTA_DURATION],
			[SAP_START], [SAP_END], [AVG_SAP], [DAP_START], [DAP_END], [AVG_DAP], [BLOOD_VOLUME], [DELTA_BLOOD_FLOW], [DELTA_UF],

			-- the symptom (output) information
			IIF([SourceDB].[dbo].[PZ_SINTOMI_EXTRADIALISI].[ID_TB_SINTOMI] IS NULL, 1, [SourceDB].[dbo].[PZ_SINTOMI_EXTRADIALISI].[ID_TB_SINTOMI]) AS [SYMPTOM_ID]
			FROM [PATIENT_DIALYSIS]
			LEFT JOIN [SourceDB].[dbo].[PZ_SINTOMI_EXTRADIALISI]
			ON ([PATIENT_DIALYSIS].PATIENT = [SourceDB].[dbo].[PZ_SINTOMI_EXTRADIALISI].ID_PAZIENTE_PZ_ANAGRAFICA
				AND [PATIENT_DIALYSIS].CENTER = [SourceDB].[dbo].[PZ_SINTOMI_EXTRADIALISI].ID_CENTRO_PZ_ANAGRAFICA
				AND [PATIENT_DIALYSIS].[NEXT_SESSION_DATE] = [SourceDB].[dbo].[PZ_SINTOMI_EXTRADIALISI].DATA_ORA_AVVERTIMENTO)
	)

INSERT INTO [dbo].[PATIENT_DIALYSIS_SYMPTOM]
(
	[PATIENT],
	[CENTER],
	[PATIENT_SEX],
	[PATIENT_RACE],
	[PATIENT_AGE],
	[SESSION_ID],
	[SESSION_DATE],
	[KTV],
	[QB],
	[PROG_WEIGHT_LOSS],
	[REAL_WEIGHT_LOSS],
	[DELTA_WEIGHT],
	[PROG_DURATION],
	[REAL_DURATION],
	[DELTA_DURATION],
	[SAP_START],
	[SAP_END],
	[AVG_SAP],
	[DAP_START],
	[DAP_END],
	[AVG_DAP],
	[BLOOD_VOLUME],
	[DELTA_BLOOD_FLOW],
	[DELTA_UF],
	[SYMPTOM_ID]
)
SELECT
	[PATIENT],
	[CENTER],
	[PATIENT_SEX],
	[PATIENT_RACE],
	[PATIENT_AGE],
	[SESSION_ID],
	[SESSION_DATE],
	[KTV],
	[QB],
	[PROG_WEIGHT_LOSS],
	[REAL_WEIGHT_LOSS],
	[DELTA_WEIGHT],
	[PROG_DURATION],
	[REAL_DURATION],
	[DELTA_DURATION],
	[SAP_START],
	[SAP_END],
	[AVG_SAP],
	[DAP_START],
	[DAP_END],
	[AVG_DAP],
	[BLOOD_VOLUME],
	[DELTA_BLOOD_FLOW],
	[DELTA_UF],
	[SYMPTOM_ID]
FROM [PATIENT_DIALYSIS_SYMPTOM]
ORDER BY CENTER, PATIENT, SESSION_DATE

GO